#!/bin/bash

#
# A wrapper script to update DNS entries in local server
#

TTL=300
DOMAIN=$(hostname | sed -e 's/[a-z0-9-]*.//')

unset DEBUG

fail() {
  echo >&2 "Error: $*"
  exit 1
}

usage() {
    cat >&2 << EOF

Usage: $(basename $0) -i <IP> -s <HOSTNAME> [-t <TTL>] [-d DOMAIN] add|del

Options:
   -d DOMAIN    default is $DOMAIN
   -t TTL       default is $TTL
   -n NS        optional nameserver
   -x           print output but do not execute

EOF
exit 1
}

dnscmd() {
cat << EOF
$SERVER
update $CMD $HOST.$DOMAIN $TTL IN A $IP
send
update $CMD $REVERSE.in-addr.arpa $TTL PTR $HOST.$DOMAIN.
send
EOF
}

while getopts ":i:n:s:x" opt; do
    case "$opt" in
        h) usage ;;
        d) DOMAIN=${OPTARG} ;;
        i) IP=${OPTARG} ;;
        n) SERVER="server ${OPTARG}" ;;
        s) HOST=${OPTARG} ;;
        t) TTL=${OPTARG} ;;
        x) DEBUG=true ;;
        \?) fail "invalid option: -$OPTARG" ;;
    esac
done
shift $((OPTIND-1))
CMD=$1

[[ $CMD ]] || usage

[[ $IP ]]        || fail "no ip address specified"
[[ $HOST ]]      || fail "no host name specified"
[[ $TTL -gt 0 ]] || fail "TTL must be a number greater than 0"

case $CMD in
    add) ;;
    del) CMD=delete ;;
    *) fail "invalid command: $CMD" ;;
esac

OCT=(${IP//./ })
REVERSE="${OCT[3]}.${OCT[2]}.${OCT[1]}.${OCT[0]}"

[[ $DEBUG ]] && dnscmd && exit

dnscmd | nsupdate
